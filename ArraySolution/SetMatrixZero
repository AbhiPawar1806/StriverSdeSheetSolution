package Array;

import java.util.Arrays;

public class SetMatrixZero {

	public static void printMAt(int mat[][]) {
		int row = mat.length ;
		int col = mat[0].length;
		for(int i = 0;i<row;i++) {
			for(int j = 0;j < col ;j++){
				System.out.print(mat[i][j] + " ");
			}
			System.out.println();
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int mat[][] = {{1,1,1},{1,0,1},{0,1,1}};
		printMAt(mat);
		// Brute Force approch

		int row = mat.length ;
		int col = mat[0].length;

//		for(int i = 0;i<row;i++) {
//			for(int j = 0;j < col ;j++){
//
//				if(mat[i][j]==0) {
//					// Change row to -1 
//					for(int n = i;n<i+1;n++) {
//						for(int m = 0;m < col ;m++) {
//							// If value is not 0 turn as -1
//							if(mat[n][m]!=0) {
//								mat[n][m]=-1;
//							}
//						}
//					}
//
//					// change colm value
//					for(int n = 0;n<row;n++) {
//						for(int m =j;m < j+1 ;m++) {
//							// If value is not 0 turn as -1
//							if(mat[n][m]!=0) {
//								mat[n][m]=-1;
//							}
//						}
//					}
//				}
//			}
//		}
//		printMAt(mat);
		
//		for(int i = 0;i<row;i++) {
//			for(int j = 0;j < col ;j++){
//				if(mat[i][j]==-1) {
//					mat[i][j]=0;
//				}
//			}
//			}
//		printMAt(mat);
		
		
		// OPTIMIZE APPROCH USING TWO DUMMY ARRAY so time complexity reduce. here tc O(n*m + n*m)
		
		int DumRow []= new int[mat.length];
		int DumCol []= new int [mat[0].length];
		
		Arrays.fill(DumRow, -1);
		Arrays.fill(DumCol,-1);  // Directly this value will be filled at every position of the array as we dont want zero
		
		// Traverse the matrix and when ever we find zero turns its colm dummy or row dummy at that position zero
//		int row = mat.length ;
//		int col = mat[0].length;

//		for(int i = 0;i<row;i++) {
//			for(int j = 0;j < col ;j++){
//
//				if(mat[i][j]==0) {
//					// Put value zero in corresponding dummy row and colm
//					DumRow[i]=0;
//					DumCol[j]=0;
//				}
//				}
//			}
//		
//		// Now where the dumm row and colm are zero we need to make that that row and col in that matrix zero
//		for(int i = 0;i<row;i++) {
//			for(int j = 0;j < col ;j++){
//				if(DumRow[i]==0||DumCol[j]==0) {
//					mat[i][j]=0;
//				}
//				}
//			}
//		printMAt(mat);
//		
//		
		// Best approach without using two dummy array. Creating array with its 0th row and 0th column
		int colm= 1; // Taking it as true as based on that we set 0 th col so whenever we see 0 in 0 th col we make it false. So by this no conflits
		for(int i = 0;i<row;i++) {
			if(mat[i][0]==0){    // If 0 th col has 0 present than we will conver it false so based on that oth col will make all its col value zero with effecting row
				colm= 0;
			}
			// Now we will start for col from j=1 as we have check for 0 th colm

			for(int j = 1;j < col ;j++) {
                if(mat[i][j]==0) { // Turn dummy array with to zero checking except value in 0th colm
                	mat[i][0]=0;
                	mat[0][j]=0;
                }
			}
		}
		
		// Now based on dummy array col and row doing that row or col complete zero. For 0th col we used colm=0 condn. and we goes reverse way as we dont want to update value first in dummy array as it can effect other
		for(int i =row - 1;i>=0;i--) {
			for(int j = col -1;j >=1;j--) {
				if(mat[i][0]==0||mat[0][j]==0) {
					mat[i][j]=0;
				}
			}
			// For 0 th col 
			if(colm==0)mat[i][0]=0;
		}
		printMAt(mat);
	}
	}
